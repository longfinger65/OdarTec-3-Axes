<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>